package org.calminfotech.system.models;

import java.util.Date;

import javax.persistence.Column;


import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import org.calminfotech.utils.models.Historytype;
import org.calminfotech.visitqueue.models.Visit;

import org.calminfotech.patient.models.Patient;


@Entity
@org.hibernate.annotations.Entity(dynamicInsert = true)
@Table(name = "Examination_ResultSetup")
public class ExaminationResultSetup 
{

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@ManyToOne
	@JoinColumn(name = "examination_id")
	private Examination Examination;
	

	@ManyToOne
	@JoinColumn(name = "unitofmeasure_id")
	private GlobalUnitofMeasure unitofmeasure;
	
	

	@JoinColumn(name = "description")
	private String description;
	
	@Column (name = "organisation_id")
	private Integer organisationId;

	@Column(name = "created_date")
	private Date createdDate;

	@Column(name = "created_by")
	private String createdBy;
	

	@Column(name = "modified_by")
	private String modifiedBy;

	
	@Column(name = "modified_date")
	private Date modifiedDate;
	

	@Column(name = "is_deleted")
	private boolean isDeleted;


	public Integer getId() {
		return id;
	}


	public void setId(Integer id) {
		this.id = id;
	}


	public Examination getExamination() {
		return Examination;
	}


	public void setExamination(Examination examination) {
		Examination = examination;
	}




	public String getDescription() {
		return description;
	}


	public void setDescription(String description) {
		this.description = description;
	}


	
	


	public Date getCreatedDate() {
		return createdDate;
	}


	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}


	public String getCreatedBy() {
		return createdBy;
	}


	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}


	public String getModifiedBy() {
		return modifiedBy;
	}


	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}


	public Date getModifiedDate() {
		return modifiedDate;
	}


	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}


	public boolean isDeleted() {
		return isDeleted;
	}


	public void setDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}


	public GlobalUnitofMeasure getUnitofmeasure() {
		return unitofmeasure;
	}


	public void setUnitofmeasure(GlobalUnitofMeasure unitofmeasure) {
		this.unitofmeasure = unitofmeasure;
	}



}
