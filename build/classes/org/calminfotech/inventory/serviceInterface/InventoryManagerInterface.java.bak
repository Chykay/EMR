package org.calminfotech.inventory.serviceInterface;

import java.util.List;

import org.calminfotech.inventory.exceptions.DuplicateDataException;
import org.calminfotech.inventory.exceptions.InvalidOpeningStockBalanceException;
import org.calminfotech.inventory.exceptions.InvalidUnitOfMeasureConfiguration;
import org.calminfotech.inventory.exceptions.RecordNotFoundException;
import org.calminfotech.inventory.forms.StockInForm;
import org.calminfotech.inventory.forms.StockOpeningBalanceForm;
import org.calminfotech.inventory.forms.StockInLineForm;
//import org.calminfotech.inventory.models.GlobalItemUnitofMeasure;
import org.calminfotech.inventory.models.PointStockCurrentBalance;
import org.calminfotech.inventory.models.StockIn;
import org.calminfotech.inventory.models.StockInLine;
import org.calminfotech.inventory.models.StockOpeningBalance;
import org.calminfotech.system.models.GlobalUnitofMeasure;
import org.calminfotech.system.models.UnitItem;
import org.calminfotech.views.models.GlobalItemUnitofMeasureVw;

public interface InventoryManagerInterface {



	public List<GlobalUnitofMeasure> fetchGlobalItemUnitOfMeasure(int globalItemId);

	public int getGlobalItemCurrentBalance(int globalItemId)throws InvalidOpeningStockBalanceException;

	public void updateGlobalItemCurrentBalance(double newValue, int oldValue,
			int currentBalance, int globalItemId);

	//public PointStockCurrentBalance getGlobalItemCurrentBalanceByPoint(int globalItem,int pointId) throws InvalidOpeningStockBalanceException;

	public PointStockCurrentBalance getGlobalItemCurrentBalanceByPoint(
			int globalItemId, int currentPointId, int currentUnitId) throws InvalidOpeningStockBalanceException;

	
	void updatePointGlobalItemCurrentBalance(double newValue, int oldValue,
			PointStockCurrentBalance pointStockCurrentBalance);

	//public List<PointStockCurrentBalance> getPointStockCurrentBalances();

	//public int getPointGlobalItemCurrentBalance(int globalItem,
		//	int currentPointId) throws InvalidOpeningStockBalanceException;
	
	public int getPointGlobalItemCurrentBalance(int globalItem,
			int currentPointId, int currentUnitId) throws InvalidOpeningStockBalanceException;
	

	public List<GlobalItemUnitofMeasureVw> getGlobalItemUnitOfMeasurements(
			int globalItemId);
	
	/*public List<UnitItem> getGlobalItemUnitOfMeasurements(
			int globalItemId);*/

	public boolean isPointStockAvailble(int globalItemId, int unitOfMeasure,
			int quantity, int currentPointId, int currentUnitId) throws InvalidUnitOfMeasureConfiguration, InvalidOpeningStockBalanceException;

	List<PointStockCurrentBalance> getPointStockCurrentBalances(
			int pointId, int unitId);

	
	
	

}
